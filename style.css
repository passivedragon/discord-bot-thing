html {
  box-sizing: border-box;
}


body {
    background-color: var(--background-3);
    color: var(--foreground-2);
    overflow: auto;
    max-width: 100vw;
    width: 100vw;
    height: 100vh;
    resize: none;
    margin: 0px;
    border-radius: 20%;
    /* Stolen from the site */
    --foreground-1: #fff;
    --foreground-2: #dcddde;
    --foreground-3: #b9bbbe;
    --foreground-effect-1: #72767d;
    --foreground-effect-2: #4f545c;
    --background-1: #36393f;
    --background-2: #2f3136;
    --background-3: #202225;
    --background-effect-1: #40444b;
    --background-effect-2: #292b2f;
    --muted-channels: #4f545c;
    --dividers: #292b2f;

    --debug-1: red;
    --debug-2: green;
    --debug-3: white;

    --channel-focussed: blue;
    --focussed: #fff;
    --focussed-bg: #999;
    --hover: grey;
}

img {
    pointer-events: none;
    border: solid 0px;
    border-radius: 50%;
}

@media only screen and (max-height: 2000px){
    body {
        font-size: 20px;
    }
}


.key {
    position: relative;
    color: inherit;
    width: auto;
    height: auto;
    max-height: 5vh;
    /* margin: 1%; */
    background-color: var(--background-1);
    box-shadow: 0 0 2px 2px black;
    animation: loading 5s linear both infinite;
}
.key:hover {
    background-color: var(--foreground-effect-1);
    box-shadow: 0 0 4px 4px black;
    animation: loading 5s linear all;
}

.key:active {
    border-color: inherit;
    background-color: var(--foreground-effect-2);
}

.key:focus {
    border-color: var(--foreground-effect-1);
}

body > * > * > * :hover {
    background-color: var(--focussed-bg);
}





::-webkit-scrollbar {
    width: 10px;
    background-color: var(--background-3);
    border: 5px solid var(--foreground-3)
    scrollbar-base-color:
}
::-webkit-scrollbar-thumb {
    background-color: var(--foreground-3);
}


@keyframes testanim {
    0%   :{transform: scale(20%);}
    100% :{transform: scale(80%);}
}

@keyframes loading {
    0%:  {
      transform: rotate3d(1,1,1,0deg);
    }
    100%:{
      color:
      transform: rotate3d(1,2,1,180deg);
    }
}




.hidden {display:none;}

.grid-container {
    display: grid;
}

.grid-container > * {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    flex-grow: 1;
}

.loading {
    position: absolute;
    border-color: var(--dividers);
    width: 100vw;
    /* height: 100vh; */
    image-resolution: snap;
    background-color: var(--background-1);
    text-align: center;
    z-index: 99;
}



.login {
    /* display: table-cell; */ /*need something else to show the entire thing in the center*/
    /* display: block; */
    position: absolute;
    border-color: var(--dividers);
    width: 100vw;
    height: 100vh;
    background-color: var(--background-1);
    text-align: center;
    z-index: 98;
}

.login > * {
    position: relative;
    width: auto;
}

.login > .grid-container {
    grid-template-columns: auto auto auto;
    grid-template-rows: auto;
    /* align-content: center;
    grid-gap: 3px;
    align-items: center;
    text-align: center; */
}

#token {
    justify-items: left;
    display: block;
    width: 60%;
    height: 3%;
    max-width: 60%;
    border-color: var(--background-effect-1);
}

#token:focus {
    border-color: var(--foreground-1);
}


.main {
    background-color: var(--background-3);
    height: 100vh;
    width: 100vw;
    max-width: 100vw;
    /* overflow-x: hidden; */
}

.main > {
    height: 100vh;
}

.grid-container {
    display: flex;
    align-items: stretch;
    height: calc(100% - 32px);
    /* grid-template-columns: 15% auto;
    grid-template-rows: auto;
    grid-gap: 3px;
    align-items: center;
    text-align: center; */
}



/* DEBUG: From here on out it's chat styling */

.guilds {
    display: flex;
    width: 90%;
    height: 100%;
    background-color: var(--background-3);
    max-width: 150px;
    min-width: 50px;
    align-items: stretch;
    overflow-y: auto;
    overflow-x: hidden;
}

.server {
    display: flex;
    color: var(--foreground-1);
    /* height: 50px; */
    max-width: 150px;
    min-width: 120px;
    border-radius: 5%;
    /* border: 5px; */
    /* background-image: url("./default.png");
    background-size: cover;
    background-repeat: no-repeat; */
}

.server > {
    /* display: block; */
    display: block;
    top: 0px;
    color: var(--foreground-2);
}

.server > img {
    /* display: block; */
    display: block;
    height: 48px;
    width: 48px;
}


.channels {
    display: flex;
    min-width: 150px;
    overflow-y: auto;
    flex-grow: 1;
    scroll-behavior: auto;
    cursor: context-menu;
    /* overflow-x: auto;
    overflow-y: scroll; */
}

.channel {
    display: block;
    color: var(--foreground-2);
    background-color: var(--background-1);
}

.channel:hover {
  color: var(--hover);
}


.users {
    display: flex;
    flex-direction: column;
    min-width: 140px;
    overflow-y: auto;
    max-width: 300px;
}

.user {
    display: flex;
    text-align: left;
    vertical-align: middle;
    align-items: center;
}

.user > img {
    display: block;
    width: 48px;
    height: 48px;
    border-width: medium;
}

.online > img {
    border-color: green;
}

.offline > img {
    border-color: grey;
}

.idle > img {
    border-color: yellow;
}

.dnd > img {
    border-color: red;
}

.inline {
    display: inline-block;
    /* margin: 5px; */
    /* border: 1px solid var(--foreground-3); */
}





.chat {
    align-self: stretch;
    display: flex;
    /* max-width: 80%; */
    /* background-color: var(--background-3); */
    flex-grow: 3;
    flex-shrink: 5;
    flex-direction: column;
}

.history {
    flex-direction: column-reverse;
    align-self: stretch;
    overflow-y: auto;
    max-width: 60vw;
    word-break: break-all;
}

.message {
    /* border: 2px solid var(--foreground-2); */
    /* margin: 5px; */
    border-width: 0px;
    /* border-radius: 5% 0% 0% 5%; */
    border-top: 5px;
    border-style: solid;
    border-color: var(--dividers);
}

.input {
    position: relative;
    left: inherit;
    width: inherit;
    max-height: 150px;
    /* align-items: flex-end; */ /*moves button, don't use, doesn't work*/
    /* position: ; */
}

.input > button {
    max-width: 50px;
}

textarea {
    resize: none;
    width: auto;
    overflow-y: auto;
}



.message {
    width: 100%;
    height: auto;
    background-color: var(--background-2);
    color: var(--foreground-1);
}



.info .user {
    position: absolute;
}



.context {
    /* display: flex; */
    position: absolute;
    /* width: 15vw; */
    background-color: red;
    z-index: 99;
    width: auto;
    transform: translateX(-100%);
}

.context > button {
    /* width: 100%; */
    background-color: var(--foreground-effect-1);
}


nav {
    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-content: flex-end;
}

.dropdown {
    position: relative;
    /* display: flex; */
}

.dropdown > .menu {
    display: none;
    /* min-width: 100%; */
    position: absolute;
}

.dropdown:hover > .menu {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.dropdown > * > .dropdown > .menu {
    /* transform: translateX(-100%); */
    height: 100%;
    transform: translate3d(calc(0px - 100%), calc(0px - 100%), 0);
    /* height: auto; */
}



.channel :not(.category) {
    /* transform: translateX(5%); */
    padding-left: 5%;
    width: auto;
}

.category {
    position: relative;
    text-rendering: optimizeLegibility;
}

/* .category > * {
    display: inherit;
} */

.collapsed > svg {
    transform: rotate(-90deg) translate(-30%, 20%);
}

svg {
    transition: transform 0.5s;
}

.collapsed > .channel {
    display: none;
}



.focussed,  {
    border-color: red;
    margin: 5px;
    background-color: var(--background-effect-1);
    color: var(--focussed);
}

.focused < .collapsed {
    background-color: red;
}



@keyframes alertAnimation {
    0%   {color: inherit; background-color: inherit;}
    100% {background-color: var(--focussed-bg);}
}

/* IDEA: adds a blinking to channels with new messages, perhaps to be overwritten with a noalerts class? */
.alert {
    /* color: var(--focussed);
    background-color: var(--focussed); */
    /* transition: all 2s repeat infinite; */
    /* color: var(--foreground-1); */
    /* color: red; */
    /* background-color: var(--background-effect-3); */
    animation: alertAnimation 1.5s infinite;
    animation-timing-function: cubic-bezier(0.65, 0.05, 0.36, 1);
}
